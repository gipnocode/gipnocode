mixin button(props={})
  -
    const {moduleClass, mods, lineTitle} = props
    let allMods = ''
    if (typeof(mods) !== 'undefined' && mods) {
      let modList = mods.split(',')
      for (let i=0; i < modList.length; i++) {
        allMods = allMods + ' button_' + modList[i].trim()
      }
    }

  button.button(
    class= (moduleClass || '') + allMods,
    type="button"
  )= lineTitle


mixin btn(text, mods, isInput, required)

  //- Принимает:
  //-   text    {string} - текст кнопки
  //-   mods    {string} - список модификаторов
  //-   isInput {bool}   - флаг «это тег input»
  //- Вызов:
        +btn('Кнопка-ссылка')(href='/')  - есть href, это точно ссылка
        +btn('Кнопка-input', '', true)   - есть флаг isInput, это input
        +btn('Кнопка-button', 'success') - нет href, нет isInput — это button

  -

    var allMods = '';
    if(typeof(mods) !== 'undefined' && mods) {
      var modsList = mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' button_' + modsList[i].trim();
      }
    }

  //- передан href — это ссылка
  if (attributes.href)
    a.button(class=allMods)&attributes(attributes)!= text
    block

  //- иначе, если передан isInput и он true, это input
  else if (typeof(isInput) !== 'undefined' && isInput)
    input.button(class=allMods, value=text, type='submit')&attributes(attributes)


  else
    button.button(class=allMods)&attributes(attributes)!= text
    block
